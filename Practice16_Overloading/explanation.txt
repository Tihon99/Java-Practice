Практика 16: Перегрузка методов (Method Overloading)

В этой практике демонстрируется разница между статическим (compile-time) и динамическим (runtime) связыванием при вызове перегруженных методов.

Класс A содержит 4 перегруженных метода printNum:
1. printNum(Integer i) - для объектов класса Integer
2. printNum(int i) - для примитивного типа int
3. printNum(Float f) - для объектов класса Float
4. printNum(Number n) - для объектов класса Number (родительский класс для всех числовых типов)

Результаты выполнения программы будут разными для цикла for и прямых вызовов:

1. В цикле for:
   - Тип переменной цикла объявлен как Number
   - Компилятор видит только тип Number
   - Поэтому всегда вызывается метод printNum(Number n)
   - Вывод будет:
     Number=1
     Number=11
     Number=1.11
     Number=11.11

2. При прямых вызовах:
   - Компилятор точно знает тип каждого аргумента
   - Выбирает наиболее подходящий метод для каждого типа
   - Вывод будет:
     Integer = 1
     int = 11
     Float = 1.1100
     Number=11.11

Важные замечания:
1. Перегрузка методов определяется на этапе компиляции (static binding)
2. Выбор метода зависит от объявленного типа переменной, а не от фактического типа объекта
3. При наличии нескольких подходящих методов выбирается наиболее специфичный
4. Для числа 11.11 вызывается printNum(Number), так как для Double нет специального метода

Это демонстрирует важное различие между:
- Статическим связыванием (перегрузка методов) - решается при компиляции
- Динамическим связыванием (переопределение методов) - решается во время выполнения
